name: "Build and test"
on:
  pull_request:
  push:
jobs:
  cargo-build-linux:
    runs-on: Linux
    strategy:
      fail-fast: false
      matrix:
        profile:
          - "debug"
          - "release"
    steps:
      - uses: actions/checkout@v4
      - name: "Setup rust toolchain"
        run: |
          rustup update stable
          rustup default stable

      - name: "Install distro dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev cmake libshaderc-dev libvulkan-dev glslc
          sudo apt-get install -y libclang-dev cmake

      - name: "Compile for linux"
        run: cargo build --verbose --target ${{ matrix.target }} ${{ matrix.profile == 'release' && '--release' || '' }}
        working-directory: ./nobodywho

      - name: "Upload build artifact"
        uses: actions/upload-artifact@v4
        with:
          name: build-linux-${{ matrix.profile }}
          path: ./nobodywho/target/${{ matrix.profile }}/libnobodywho.so

  cargo-build-windows:
    runs-on: Linux
    strategy:
      fail-fast: false
      matrix:
        profile:
          - "debug"
          - "release"
    steps:
      - uses: actions/checkout@v4

      - name: "Set up rust toolchain"
        run: |
          rustup update stable
          rustup default stable
          rustup target add x86_64-pc-windows-gnu

      - name: "Install deps from distro"
        run: |
          apt-get update
          apt-get install -y libclang-dev cmake

      - name: "Build for windows"
        run: cargo build --verbose --target x86_64-pc-windows-gnu ${{ matrix.profile == 'release' && '--release' || '' }}
        working-directory: ./nobodywho

      - name: "Upload build artifact"
        uses: actions/upload-artifact@v4
        with:
          name: build-windows-${{ matrix.profile }}
          path: ./nobodywho/target/${{ matrix.profile }}/nobodywho.dll


  cargo-build-macos:
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        target: 
          - "x86_64-apple-darwin"
          - "aarch64-apple-darwin"
        toolchain:
          - "stable"
        profile:
          - "debug"
          - "release"
    steps:
      - uses: actions/checkout@v4
      - run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . "$HOME/.cargo/env"
          rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
          rustup target add ${{ matrix.target }}
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - run: cargo build --verbose ${{ matrix.profile == 'release' && '--release' || '' }}
        working-directory: ./nobodywho
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}-${{ matrix.toolchain }}-${{ matrix.profile }}
          path: ./nobodywho/target/${{ matrix.profile }}/libnobodywho.dylib

  cargo-test:
    runs-on: Linux
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . "$HOME/.cargo/env"
          rustup update stable && rustup default stable
          rustup target add x86_64-unknown-linux-gnu
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev cmake libshaderc-dev libvulkan-dev glslc

      - run: wget "https://huggingface.co/bartowski/gemma-2-2b-it-GGUF/resolve/main/gemma-2-2b-it-Q5_K_M.gguf" -O ./nobodywho/model.bin
      - run: cargo test -- --nocapture --test-threads=1
        working-directory: ./nobodywho

  zip-distributable:
    needs: [cargo-build, cargo-build-macos]
    runs-on: Linux
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Zip all artifacts
        run: |
          zip -r nobodywho.zip ./artifacts
      - name: Upload zipped build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-nobodywho-zip-distributable
          path: ./nobodywho.zip
